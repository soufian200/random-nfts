import type { NextPage } from 'next'
import Head from 'next/head'
import { FiChevronDown, FiChevronUp, FiLayers } from 'react-icons/fi'
import { FiRefreshCw } from 'react-icons/fi'
import { ChangeEvent, useContext, useState } from 'react'
import Layer, { LayerType } from '../components/Layer'
import Input from '../components/Input'
import Preview from '../components/Preview'
import Navbar from '../components/Navbar'
import Overlay from '../components/Overlay'
import { AppContext } from '../context/AppContext'
import { AiOutlinePlus } from 'react-icons/ai'
import { DndProvider } from 'react-dnd'
import { HTML5Backend } from 'react-dnd-html5-backend'
import { Container } from '../components/Container'



const Home: NextPage = () => {

  const [opened, setOpened] = useState(!false)
  const { overlayVisible, setOverlayVisible, layers, setLayers } = useContext(AppContext)
  const [newLayerFormVisible, setNewLayerFormVisible] = useState(false)
  const [layerName, setLayerName] = useState('')


  const handleNewLayer = () => {

    setNewLayerFormVisible(!newLayerFormVisible)
  }


  const handleSave = () => {

    if (!layerName) return;

    /** @returns random number */
    const getRandomId = () => Math.floor(Math.random() * 10000);

    setLayers([...layers, { id: getRandomId(), folderName: layerName, imgs: [] }])
    setNewLayerFormVisible(false)
    setLayerName('')
  }

  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
    setLayerName(e.target.value)
  }

  const handleCreate = () => {
    console.log(layers)
    setOverlayVisible(true)
  }





  return <div className='bg-slate-900 h-screen overflow-hidden' >
    <Head>
      <title>Create Random NFTs</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <main className='relative'>
      {overlayVisible && <Overlay setOverlayVisible={setOverlayVisible} />}
      <Navbar />
      <div className="  text-white flex w-full ">
        <div className=' w-2/5 p-5 pb-20 h-screen  overflow-auto' >
          <div className=' mx-auto  max-w-xl  '>
            <div className=''>
              <div className=' flex justify-center '>
                <div>
                  <Preview src='/layers/backgrounds/1.jpeg' />
                  <div className='mt-3 flex justify-between '>
                    <div className=' flex   '>
                      <Input name='width' placeholder='Width' styles='mb-0 mr-3 w-[80px]' />
                      <Input name='height' placeholder='Height' styles='mb-0 w-[80px]' />
                    </div>
                    <button title='Random Preview' className='bg-blue-400 hover:bg-blue-500 py-3 px-4 rounded-md text-slate-900 font-bold'>
                      <FiRefreshCw size={26} />
                    </button>
                  </div>
                </div>
              </div>
              <div className=' mt-10'>
                <div className={`bg-slate-700 transition-all  rounded-t-lg ${!opened && "rounded-b-lg"} p-2 px-3 items-center flex justify-between cursor-pointer`}
                  onClick={() => setOpened(!opened)}
                >
                  <h1 className='font-bold transform '>More</h1>
                  <div

                    className='hover:bg-slate-600   p-1 rounded-full'>

                    {
                      opened
                        ? <FiChevronUp size={25} />
                        : <FiChevronDown size={25} />
                    }
                  </div>
                </div>
                <div className={`flex flex-col overflow-hidden transition-all rounded-b-lg p-2 ${opened ? 'h-auto ' : 'h-0 py-0'} bg-[#3c495c]`}>
                  <Input name='collectionName' placeholder='Collection Name' />
                  <textarea
                    placeholder='Description'
                    className='bg-slate-800 p-2 rounded-md mb-3'
                    rows={3}
                  ></textarea>
                  <Input name='size' placeholder='Size' />
                </div>
                <div className='flex justify-center mt-8'>
                  <button
                    onClick={handleCreate}
                    className='bg-yellow-400 hover:bg-yellow-500 py-3 px-20 rounded-md text-slate-900 font-bold'>
                    Create</button>
                </div>
              </div>
            </div>

          </div>
        </div>
        <div className='bg-slate-800 w-3/5 p-4 px-5 pb-20 h-screen overflow-auto' >
          <div className='flex items-center justify-between mb-6'>
            <div className='flex items-center'>
              <FiLayers size={30} />
              <h1 className='text-2xl font-bold ml-2'>Layers</h1>
            </div>
            <div className='relative'>
              <div
                onClick={handleNewLayer}
                className='bg-slate-600 hover:bg-slate-700 cursor-pointer flex items-center p-2 rounded-md'
              >
                <AiOutlinePlus size={25} />
                <h1 className='ml-1'>New Layer</h1>
              </div>
              {
                newLayerFormVisible && <div className={`z-50 transition bg-slate-600 p-2 absolute right-0 top-0 w-[220px] rounded-md shadow-md`}>
                  <Input
                    placeholder='Layer Name'
                    name="layerName"
                    styles='w-full'
                    value={layerName}
                    onChange={handleChange}
                  />
                  <button
                    onClick={handleSave}
                    className='bg-yellow-400 hover:bg-yellow-500 p-2 py-3 text-slate-900 w-full rounded-md'>Save</button>
                  <button
                    onClick={() => setNewLayerFormVisible(false)}
                    className='bg-slate-200 hover:bg-slate-300 p-2 py-3 text-slate-900 w-full rounded-md mt-1'>Cancel</button>
                </div>
              }
            </div>
          </div>

          <div className="">
            <DndProvider backend={HTML5Backend}>
              <Container />
            </DndProvider>
          </div>

          {/* {
            layers.length === 0
              ? <div className={`bg-slate-700 px-3 py-5 flex justify-center items-center rounded-lg`}>
                <h1 className='text-slate-400' >No Layers Here !</h1>
              </div>
              : layers.map((layer: LayerType, index: number) => {
                return <Layer key={index} layer={layer} />
              })
          } */}
        </div>
      </div>
    </main>
  </div>
}

export default Home
